
/* main  which holds glass,  everyting will be 100% minimum height
it'll take full space */
main{
  min-height: 100vh;
  background: linear-gradient(to right top, #65dfc9, #6cdbeb);
  display: flex;
  align-items: center;
  justify-content: center;
}
/* background linear gradient from bottom left to top right */
/* we can use display flex, and alignIhem to center vertically and justify-content to
center horizontally*/

/* glass container will take 80% of screen
rgba allows to add opacity, background from left bottom  */
.glass{
  background: white;
  min-height: 80vh;
  width: 60%;
  background: linear-gradient(to right bottom, rgba(255,255,255,0.7), rgba(255,255,255,0.3));
  border-radius: 2rem;
  z-index: 3;
  backdrop-filter: blur(2rem);
  /* to add blur to glass container */
  display: flex;
  /* we can use display flex to seperate our glass container into to sections
 adding flex will make child elements put vertically, next to each other*/
}
/* background from left top to right bottom
use z-index of 3 for glass container, and less for circle containers
so circles will be behind, more number the more forward it will be*/



/* apply for both circles this style */
.circle1, .circle2{
  background: linear-gradient(to right bottom, rgba(255,255,255,0.8), rgba(255,255,255,0.3));
  height: 20rem;
  width: 20rem;
  position: absolute;
  z-index: 2;
  border-radius: 50%;
}
/* bacgkround from left top to right bottom
rgba allows to add opacity, background from left bottom
z-index of 2 for circles. glass has 3. so circles will be behind glass component 

give width and height, and position absolute
it means it is positioned relative to the nearest positioned ancestor (screen) */

.circle1{
  top: 5%;
  right: 10%;
}
/* and we can then add top right px that we want to move it. move 5% percent from tom side*/

.circle2{
  bottom: 5%;
  left: 10%;
}
/* and we can then add bottom left px that we want to move it. move 5% percent from tom side*/


/* we can use display flex to seperate our glass container into to sections
 adding flex will make child elements put vertically, next to each other*/

/* flex 1 means it'll take all available space */
.dashboard{
  flex: 1;
  display:flex;
  /*adding flex will make child elements put vertically but we dont want that
  so we can change flex direction to column, and after we add display flex we
  can then use alignItems (horizontally) and justify-content to center or ..*/
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
  text-align: center;
  /* align text, add linear gradient to background, from left top to right bottom */
  background: linear-gradient(to right bottom, rgba(255,255,255,0.7), rgba(255,255,255,0.3));
  border-radius: 2rem;
}

.link{
  display: flex;
  /*adding flex will make child elements put vertically, so img will be next to h2*/
  margin: 2rem 0rem;
  padding: 1rem 5rem;
  align-items: center;
  /* adding padding and margin to each link container, and center horizontally*/
}

/* padding to h2. to create more space */
.link > h2{
  padding: 0rem 2rem;
}

.pro{
  background: linear-gradient(to right top, #65dfc9, #6cdbeb);
  border-radius: 2rem;
  color: white;
  padding: 1rem;
  margin-bottom: 1rem;
  position: relative;
  /* if you want to be positioned relative to .pro container add to pro container position relative */
}

.pro > img{
  /* position absolute, positioned relative to the nearest positioned ancestor.
  if you want to be positioned relative to .pro container add to pro container position relative */
  position: absolute;
  top: -10%;
  right: 10%;
  /*top -10 from this div. 10 percent from right */

}

.pro > h2{
  width: 40%;
  color: white;
  font-weight: 600;
}


/* if add flex:1 to games too it will split glass equally. if flex: 2 it will be twice as big */
.games{
  flex: 2;
  display: flex;
  /* adding flex will make child elements put vertically, next to each other
  but we dont want that so we add direction column */
  flex-direction: column;
  margin: 5rem;
}

/* GAMES SECTION STYLING */
.status{
  margin-bottom: 3rem;
  /* adding space to bottom */
}

.status > input{
  background: linear-gradient(to right bottom, rgba(255,255,255,0.7), rgba(255,255,255,0.3));
  border: none;
  /* remove border, and make input background linnear gradient */
  width: 50%;
  padding: 0.5rem;
  border-radius: 2rem;
}

.card{
  /* adding flex will make child elements put vertically, next to each other */
  display: flex;
  background: linear-gradient(to left top, rgba(255,255,255,0.2), rgba(255,255,255,0.9));
  border-radius: 1rem;
  /* margin top bottom 2rem. padding 2rem all around */
  margin: 2rem 0rem;
  padding: 2rem;
  box-shadow: 6px 6px 20px rgba(122,122,122,0.212);
  justify-content: space-between;
  /* gives space between elements horizontally */

}

.progress{
  /* add radius to progress container, width 100 % */
  background: linear-gradient(to right top, #65dfc9, #6cdbeb);
  width: 100%;
  height: 25%;
  border-radius: 1rem;
  position: relative;
  overflow: hidden;
}


/* generate additional styling. ::after you have to add content "" always*/
.progress::after{
  /* we basically can generate new div */
  content: "";
  width: 100%;
  height: 100%;
  background: rgb(236,236,236);
  position: absolute;
  /* position absolute will positioned relative to the nearest positioned ancestor */
  left: 60%;
}

.card_info{
  display: flex;
  /* display flex will make child elements put vertically, next to each other */
  flex-direction: column;
  justify-content: space-between;
  /* give bit of spacing between those */
}

.percentage{
  font-weight: bold;
}